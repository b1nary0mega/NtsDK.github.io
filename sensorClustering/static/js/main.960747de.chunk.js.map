{"version":3,"sources":["utils/animation.js","utils/polygonUtils.js","utils/polygonGenerator.js","components/MapMarker/MapMarker.js","components/MapMarker/index.js","components/MapPoint/MapPoint.js","components/MapPoint/index.js","components/Prototype1/Prototype1.js","components/MainPolygon/index.js","components/MainPolygon/MainPolygon.js","components/Map/Map.js","components/Map/index.js","components/MapEditor/MapEditor.js","components/MapEditor/index.js","utils/fileUtils.js","components/MusicEditor/MusicEditor.js","components/MusicEditor/index.js","components/App/App.js","components/Beacons/BeaconTable/index.js","components/Beacons/BeaconTable/BeaconTable.js","components/Beacons/PolygonTable/index.js","components/Beacons/PolygonTable/PolygonTable.js","components/Beacons/SettingsForm/index.js","components/Beacons/SettingsForm/SettingsForm.js","utils/colorPalette.js","components/Beacons/Beacons.js","components/Beacons/index.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.jsx","components/App/index.js","index.js"],"names":["Timing","timeFraction","progress","Math","pow","poly","R","x","circ","sin","acos","back","bounce","a","b","elastic","cos","PI","makeEaseOut","timing","makeEaseInOut","animate","options","start","performance","now","animation","enable","requestAnimationFrame","time","duration","draw","loop","getMultiPolygonSolidMassCenter","multiPolygon","intermediate","volume","map","sums","reduce","acc","point","y","intermediate2massCenter","polygon","ring","Object","objectSpread","getSolidMassCenter","area2","gpu","weightCenter","polygon2polyline","pt","join","euDist","_ref","_ref2","x1","y1","x2","y2","sqrt","clipPolygon","first","second","clippingUtils","intersection","getPolygons","beacons","SVG_WIDTH","SVG_HEIGHT","mainPolygon","points","beacon","delaunay","Delaunay","from","voronoi","polygons","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cellPolygons","Symbol","iterator","next","done","value","push","err","return","result","beaconIds","beaconColors","polygonCenters","data","i","id","length","clippedPolygons","clippedCenters","p","MapMarker","state","_this$props","this","props","color","onClick","react_default","createElement","transform","concat","version","baseProfile","width","height","viewBox","xmlns","cx","cy","r","strokeWidth","stroke","fill","fontSize","textAnchor","d","Component","defaultProps","MapPoint","_this$props$r","MainPolygon","react","opacity","components_MapPoint","Map","imagePositionX","imagePositionY","imageOpacity","imageScale","svgWidth","svgHeight","children","onPropChange","imageUrl","imageStyle","background","assign","className","style","MapEditor","onFileUpload","evt","setImageUrl","_this","console","log","f","target","files","FileReader","onload","e","contents","readAsDataURL","toDefaultImageUrl","Form_default","Row_default","Group","as","Col","Label","Control","type","onChange","placeholder","accept","Button_default","components_Map","components_MainPolygon","readJsonFile","Promise","resolve","reject","object","JSON","parse","readAsText","Error","readBinaryFile","name","buffer","readAsArrayBuffer","illegalRe","controlRe","reservedRe","windowsReservedRe","windowsTrailingRe","makeFileName","root","extension","date","Date","input","replacement","timeStr","dateFormat","fileName","replace","substring","json2File","str","blob","Blob","saveAs","str2File","stringify","MusicEditor","buffers","loading","componentDidMount","audioService","isLoaded","then","setState","getBuffers","componentDidUpdate","componentWillUnmount","updateBufferNames","onSoundSelected","addAudioFile","_this2","_this$state","removeSound","startSound","stopSound","initialState","BeaconTable","onTableHover","onBeaconChange","onBeaconPropCheckboxChange","onBeaconPropChange","onBeaconRemove","onMouseOver","checked","positionFixed","PolygonTable","onPointChange","SettingsForm","showBeaconMarkers","showPolygonLabels","showPolygonBoundaries","showMassCenters","showBeaconSignalArea","signalRadius","enableAutoIteration","maxDelta","showTracks","_this$props2","toggleCheckbox","onStateChange","nextIteration","clearPolygon","clearBeacons","clearTracks","htmlFor","variant","colorPalette","border","highlight","hover","tracks","Beacons","mode","getClickCoords","event","rect","document","querySelector","getBoundingClientRect","eX","clientX","eY","clientY","round","left","top","addBeacon","_this$getClickCoords","newBeacon","shortid","generate","sound","setBeacons","toConsumableArray","addMainPolygonPoint","_this$getClickCoords2","setMainPolygon","newPoint","_mainPolygon$","slicedToArray","last","prop","_this$props3","index","findIndex","beacons2","defineProperty","onMainPolygonPointChange","coord","_this$props4","Number","newPolygon","_this$props5","_this$props6","_this$props7","filter","hoveredBeacon","setMovable","stopPropagation","movableId","moveMovable","movable","_this$props8","setModeState","clearMainPolygon","autoIteration","setTimeout","_this$props9","newBeacons","center","find","center2","isNaN","delta2","_newBeacons$i","tracks2Polylines","trackArr","obj","polygonData","_this$props10","trackLines","onMouseMove","offset","stopColor","ColorPalette","trackLine","components_MapMarker","Beacons_SettingsForm","Check","label","Beacons_PolygonTable","Beacons_BeaconTable","ErrorBoundry","hasError","componentDidCatch","localStorage","removeItem","window","location","reload","defaultImgUrl","database","getItem","parsedDb","appState","App","showBeaconsTab","prepareDataForJson","downloadDatabaseAsFile","uploadDatabaseFile","click","onFileSelected","database2","setInterval","setItem","_this3","components_ErrorBoundry","data-original-title","title","tabIndex","components_MapEditor","components_Beacons","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.960747de.chunk.js","sourcesContent":["import * as R from 'ramda';\r\n\r\nconst Timing = {};\r\n// module.exports = Timing;\r\n\r\n// call examples\r\n//timing: Timing.linear,\r\n//timing: Timing.quad,\r\n//timing: Timing.circ,\r\n//timing: Timing.bounce,\r\n//timing: Timing.makeEaseOut(Timing.bounce),\r\n//timing: Timing.makeEaseInOut(Timing.bounce),\r\n//timing: Timing.back(3.5),\r\n//timing: Timing.elastic(1.5),\r\n//timing: Timing.makeEaseInOut(Timing.poly(4)),\r\n\r\nTiming.linear = timeFraction => timeFraction;\r\n\r\nTiming.quad = progress => (progress ** 2);\r\n\r\nTiming.poly = R.curry((x, progress) => (progress ** x));\r\n\r\nTiming.circ = timeFraction => 1 - Math.sin(Math.acos(timeFraction));\r\n\r\nTiming.back = R.curry((x, timeFraction) => (timeFraction ** 2) * ((x + 1) * timeFraction - x));\r\n\r\nTiming.bounce = (timeFraction) => {\r\n  for (let a = 0, b = 1, result; ; a += b, b /= 2) {\r\n    if (timeFraction >= (7 - 4 * a) / 11) {\r\n      return -(((11 - 6 * a - 11 * timeFraction) / 4) ** 2) + (b ** 2);\r\n    }\r\n  }\r\n};\r\n\r\nTiming.elastic = (x, timeFraction) => (2 ** (10 * (timeFraction - 1))) * Math.cos(20 * Math.PI * x / 3 * timeFraction);\r\n\r\nTiming.makeEaseOut = timing => function (timeFraction) {\r\n  return 1 - timing(1 - timeFraction);\r\n};\r\n\r\nTiming.makeEaseInOut = timing => function (timeFraction) {\r\n  if (timeFraction < 0.5) {\r\n    return timing(2 * timeFraction) / 2;\r\n  }\r\n  return (2 - timing(2 * (1 - timeFraction))) / 2;\r\n};\r\n\r\nconst animate = (options) => {\r\n  let start = performance.now();\r\n  const animation = {\r\n    enable: true\r\n  };\r\n\r\n  requestAnimationFrame(function animate(time) {\r\n    if (!animation.enable) return;\r\n\r\n    // timeFraction from 0 to 1\r\n    let timeFraction = (time - start) / options.duration;\r\n    if (timeFraction > 1) timeFraction = 1;\r\n\r\n    // current animation state\r\n    const progress = options.timing(timeFraction);\r\n\r\n    options.draw(progress);\r\n\r\n    if (timeFraction < 1) {\r\n      requestAnimationFrame(animate);\r\n    } else if (options.loop) {\r\n      start += options.duration;\r\n      requestAnimationFrame(animate);\r\n    }\r\n  });\r\n  return animation;\r\n};\r\n\r\nexport { Timing, animate };\r\n","//http://e-maxx.ru/algo/gravity_center\r\nimport * as R from 'ramda';\r\nimport * as gpu from '@thi.ng/geom-poly-utils';\r\n\r\n// by points\r\nfunction getPointMassCenter(polygon) {\r\n  const sums = polygon.reduce((acc, point) => {\r\n    acc[0] += point[0];\r\n    acc[1] += point[1];\r\n    return acc;\r\n  }, [0, 0]);\r\n  return {\r\n    x: sums[0] / polygon.length,\r\n    y: sums[1] / polygon.length,\r\n  };\r\n}\r\nconst dist = (arr1, arr2) => Math.sqrt((arr1[0] - arr2[0]) * (arr1[0] - arr2[0]) + (arr1[1] - arr2[1]) * (arr1[1] - arr2[1]));\r\n// by edges\r\nfunction getPerimeterMassCenter(polygon) {\r\n  const polygon2 = polygon.map((pair, i) => {\r\n    if (i < polygon.length - 1) {\r\n      return [(pair[0] + polygon[i + 1][0]) / 2, (pair[1] + polygon[i + 1][1]) / 2, dist(pair, polygon[i + 1])];\r\n    }\r\n    return [(pair[0] + polygon[0][0]) / 2, (pair[1] + polygon[0][1]) / 2, dist(pair, polygon[0])];\r\n  });\r\n  const sums = polygon2.reduce((acc, point) => {\r\n    acc[0] += point[0] * point[2];\r\n    acc[1] += point[1] * point[2];\r\n    return acc;\r\n  }, [0, 0]);\r\n  const perimeter = R.sum(polygon2.map(p => p[2]));\r\n  return {\r\n    x: sums[0] / perimeter,\r\n    y: sums[1] / perimeter,\r\n  };\r\n}\r\n\r\nfunction getTriangleArea(triangle) {\r\n  const a = dist(triangle[0], triangle[1]);\r\n  const b = dist(triangle[0], triangle[2]);\r\n  const c = dist(triangle[1], triangle[2]);\r\n  const p = (a + b + c) / 2;\r\n  const S = Math.sqrt(p * (p - a) * (p - b) * (p - c));\r\n  return S;\r\n}\r\n\r\n// result is the same as for getPointMassCenter\r\nfunction getTriangleCentroid(triangle) {\r\n  const pt1 = triangle[0];\r\n  const pt2 = [(triangle[1][0] + triangle[2][0]) / 2, (triangle[1][1] + triangle[2][1]) / 2];\r\n\r\n  return {\r\n    x: (pt2[0] - pt1[0]) * 2 / 3 + pt1[0],\r\n    y: (pt2[1] - pt1[1]) * 2 / 3 + pt1[1],\r\n    pt1,\r\n    pt2\r\n  };\r\n}\r\n\r\nfunction getMultiPolygonSolidMassCenter(multiPolygon) {\r\n  const intermediate = R.flatten(multiPolygon.map(polygon => polygon.map(ring => ({\r\n    ...getSolidMassCenter(ring),\r\n  }))));\r\n  // const intermediate = polygons.map((polygon, i) => ({\r\n  //   ...getSolidMassCenter(polygon),\r\n  //   // volume: getTriangleArea(triangle)\r\n  // }));\r\n  return intermediate2massCenter(intermediate);\r\n}\r\n\r\nfunction getSolidMassCenter(polygon) {\r\n  // // first version - take one polygon point as triangle basis\r\n  // // const pt1 = polygon[0];\r\n  // // const triangles = R.aperture(2, R.tail(polygon)).map(R.concat([pt1]));\r\n\r\n  // // second version - take some simple mass center as triangle basis\r\n  // // const massCenter = getPointMassCenter(polygon);\r\n  // const massCenter = getPerimeterMassCenter(polygon);\r\n  // const pt1 = [massCenter.x, massCenter.y];\r\n  // const triangles = R.aperture(2, polygon).map(R.concat([pt1]));\r\n\r\n\r\n  // // console.log(polygon);\r\n  // // console.log(triangles);\r\n  // // triangle = [[3,0],[0,0],[0,5]];\r\n  // const intermediate = triangles.map((triangle, i) => ({\r\n  //   ...getPointMassCenter(triangle),\r\n  //   volume: getTriangleArea(triangle)\r\n  // }));\r\n  // const area1 = R.sum(intermediate.map(R.prop('volume')));\r\n  const area2 = gpu.polyArea2(polygon);\r\n  const weightCenter = gpu.centerOfWeight2(polygon);\r\n  // // gpu\r\n  // // console.log(area1, area2);\r\n  // console.log('gpu', area2, weightCenter);\r\n  // // console.log(intermediate);\r\n  // // return\r\n  // const tmp = intermediate2massCenter(intermediate);\r\n  // console.log('old result', tmp);\r\n  // // return tmp;\r\n  return {\r\n    x: weightCenter[0],\r\n    y: weightCenter[1],\r\n    volume: area2\r\n  };\r\n}\r\n\r\nfunction intermediate2massCenter(intermediate) {\r\n  const volume = R.sum(intermediate.map(R.prop('volume')));\r\n  const sums = intermediate.reduce((acc, point) => {\r\n    acc[0] += point.x * point.volume;\r\n    acc[1] += point.y * point.volume;\r\n    return acc;\r\n  }, [0, 0]);\r\n  return {\r\n    x: sums[0] / volume,\r\n    y: sums[1] / volume,\r\n    volume\r\n  };\r\n}\r\n\r\nconst polygon2polyline = polygon => (polygon ? polygon.map(pt => pt.join(',')).join(' ') : '');\r\n\r\nconst euDist = ({ x: x1, y: y1 }, { x: x2, y: y2 }) => Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n\r\nexport {\r\n  getPointMassCenter, getPerimeterMassCenter, getSolidMassCenter, polygon2polyline, euDist, getMultiPolygonSolidMassCenter\r\n};\r\n","/* eslint-disable no-restricted-syntax */\r\nimport { Delaunay } from 'd3-delaunay';\r\nimport * as R from 'ramda';\r\nimport clippingUtils from 'polygon-clipping';\r\nimport {\r\n  getPointMassCenter, getPerimeterMassCenter, getSolidMassCenter, getMultiPolygonSolidMassCenter\r\n} from './polygonUtils';\r\n\r\n// const clipPolygon = (first, second) => clippingUtils.intersection([first], [second])[0][0];\r\nconst clipPolygon = (first, second) => clippingUtils.intersection([first], [second]);\r\n\r\nfunction getPolygons(beacons, SVG_WIDTH, SVG_HEIGHT, mainPolygon) {\r\n  const points = beacons.map(beacon => [beacon.x, beacon.y]);\r\n  const delaunay = Delaunay.from(points);\r\n  const voronoi = delaunay.voronoi([0, 0, SVG_WIDTH, SVG_HEIGHT]);\r\n\r\n  const polygons = [];\r\n  for (const polygon of voronoi.cellPolygons()) {\r\n    polygons.push(polygon);\r\n    // console.log(polygon);\r\n  }\r\n\r\n  const result = {\r\n    delaunay,\r\n    polygons,\r\n    beaconIds: beacons.map(R.prop('id')),\r\n    beaconColors: beacons.map(R.prop('color')),\r\n    polygonCenters: polygons.map(getSolidMassCenter).map((data, i) => ({\r\n      ...data,\r\n      id: beacons[i].id\r\n    }))\r\n  };\r\n  if (mainPolygon && mainPolygon.length > 1) {\r\n    result.clippedPolygons = polygons.map((polygon, i) => clipPolygon(polygon, mainPolygon));\r\n    // result.clippedCenters = result.clippedPolygons.map(getSolidMassCenter).map((data, i) => ({\r\n    result.clippedCenters = result.clippedPolygons.map(getMultiPolygonSolidMassCenter).map((data, i) => ({\r\n      ...data,\r\n      id: beacons[i].id\r\n    }));\r\n  } else {\r\n    // result.clippedPolygons = result.polygons;\r\n    result.clippedPolygons = result.polygons.map(p => [[p]]);\r\n    result.clippedCenters = result.polygonCenters;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default getPolygons;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MapMarker.css';\r\n\r\nexport default class MapMarker extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      x, y, id, color, onClick\r\n    } = this.props;\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${x - 40 / 4},${y - 70 / 2}) scale(0.5)`}\r\n        onClick={onClick}\r\n      >\r\n        <svg\r\n          version=\"1.1\"\r\n          baseProfile=\"full\"\r\n          width=\"40\"\r\n          height=\"70\"\r\n          viewBox=\"0 0 40 70\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n\r\n          <circle\r\n            cx=\"20\"\r\n            cy=\"20\"\r\n            r=\"18.75\"\r\n            strokeWidth=\"2.5\"\r\n            stroke={color || 'black'}\r\n            fill=\"white\"\r\n          />\r\n\r\n          <text x=\"20\" y=\"25\" fontSize=\"15\" textAnchor=\"middle\" fill=\"black\">{id}</text>\r\n\r\n          <path d=\"M 1.75 28 L 20 70 L 38.25 28 A 20 20 0 0 1 1.75 28\" fill={color} />\r\n\r\n        </svg>\r\n\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nMapMarker.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nMapMarker.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n","// import { withTranslation } from 'react-i18next';\r\nimport MapMarker from './MapMarker.js';\r\n\r\nexport default (MapMarker);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MapPoint.css';\r\n\r\nexport default class MapPoint extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      x, y, fill, r = 2\r\n    } = this.props;\r\n\r\n    return (\r\n      <circle r={r} cx={x} cy={y} fill={fill || 'red'} />\r\n    );\r\n  }\r\n}\r\n\r\nMapPoint.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nMapPoint.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n","// import { withTranslation } from 'react-i18next';\r\nimport MapPoint from './MapPoint.js';\r\n\r\nexport default (MapPoint);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component, Fragment } from 'react';\r\n// import logo from './logo.svg';\r\nimport './Prototype1.css';\r\nimport * as R from 'ramda';\r\n\r\n// import beacons from '../../data/beacons.json';\r\nimport initialPlayers from '../../data/players.json';\r\n\r\nimport { animate, Timing } from '../../utils/animation';\r\n\r\nimport getPolygons from '../../utils/polygonGenerator';\r\n\r\nimport MapMarker from '../MapMarker';\r\nimport MapPoint from '../MapPoint';\r\n\r\n// const SVG_WIDTH = 500;\r\n// const SVG_HEIGHT = 400;\r\n\r\n// const imageCenter = {\r\n//   x: SVG_WIDTH / 2,\r\n//   y: SVG_HEIGHT / 2,\r\n// };\r\n\r\n// const beaconCenter = beacons.reduce((acc, beacon) => {\r\n//   acc.x += beacon.x;\r\n//   acc.y += beacon.y;\r\n//   return acc;\r\n// }, { x: 0, y: 0 });\r\n\r\n// beaconCenter.x /= beacons.length;\r\n// beaconCenter.y /= beacons.length;\r\n\r\n// const correctedBeacons = beacons.map((beacon, i) => ({\r\n//   ...beacon,\r\n//   x: beacon.x + imageCenter.x - beaconCenter.x,\r\n//   y: beacon.y + imageCenter.y - beaconCenter.y,\r\n//   color: ['red', 'green', 'blue'][i % 4]\r\n// }));\r\n\r\n// const sortBeacons = R.pipe(R.sortBy(R.prop('x')), R.sortBy(R.prop('y')));\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    polygonData: {},\r\n    sounds: [\r\n    ],\r\n    players: initialPlayers,\r\n    playing: false,\r\n    playGhostSound: true,\r\n    playAreaSound: true,\r\n    movePlayers: true,\r\n    soundsLoaded: false,\r\n    movableId: null,\r\n    showBeaconMarkers: false,\r\n    listenPlayer: initialPlayers[0].id\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { beacons, svgWidth, svgHeight } = this.props;\r\n    // this.setState(({ beacons }) => ({\r\n    this.setState(({\r\n      polygonData: getPolygons(beacons, svgWidth, svgHeight),\r\n    }));\r\n    const { audioService } = this.props;\r\n    audioService.isLoaded.then(() => this.setState({\r\n      soundsLoaded: true,\r\n    }));\r\n    this.animatePlayer();\r\n  }\r\n\r\n  animatePlayer = (duration) => {\r\n    const that = this;\r\n    this.animation = animate({\r\n      duration: 20000,\r\n      timing: Timing.makeEaseInOut(Timing.linear),\r\n      draw(progress) {\r\n        that.setState((state) => {\r\n          if (!state.movePlayers) {\r\n            return null;\r\n          }\r\n          const newState = {\r\n            ...state,\r\n            players: state.players.map((player, i) => ({\r\n              ...player,\r\n              x: player.startX + Math.cos(progress * player.speed * 2 * Math.PI) * player.rx,\r\n              y: player.startY + Math.sin(progress * player.speed * 2 * Math.PI) * player.ry * player.moveDirection\r\n            })),\r\n            // players: [{\r\n            //   x: 200 + Math.cos(progress*2 * Math.PI) * 100,\r\n            //   y: 150 + Math.sin(progress*2 * Math.PI) * 100\r\n            // }],\r\n            sounds: [...state.sounds]\r\n          };\r\n          if (state.playing) {\r\n            that.crossfade(newState);\r\n          }\r\n          return newState;\r\n        });\r\n      },\r\n      loop: true\r\n    });\r\n  }\r\n\r\n  toggleMusic = () => {\r\n    this.setState((state) => {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      state.playing ? this.stop() : this.play();\r\n      return {\r\n        playing: !state.playing\r\n      };\r\n    });\r\n  };\r\n\r\n  togglePlayerMove = () => {\r\n    this.setState(state => ({\r\n      movePlayers: !state.movePlayers\r\n    }));\r\n  };\r\n\r\n  play = () => {\r\n    const { sounds } = this.state;\r\n    const { audioService } = this.props;\r\n    audioService.startSounds(sounds.map(R.prop('name')));\r\n    this.crossfade(this.state);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    const { audioService } = this.props;\r\n    audioService.stopSounds();\r\n    this.animation.enable = false;\r\n  }\r\n\r\n  stop = () => {\r\n    const { audioService } = this.props;\r\n    audioService.stopSounds();\r\n  }\r\n\r\n  // getBeaconColor = (index) => {\r\n  //   switch (index % 4) {\r\n  //   case 0:\r\n  //     return 'blue';\r\n  //   case 1:\r\n  //     return 'red';\r\n  //   case 2:\r\n  //     return 'green';\r\n  //   default:\r\n  //     return 'none';\r\n  //   }\r\n  // }\r\n\r\n  crossfade = (state) => {\r\n    const {\r\n      playAreaSound, playGhostSound, players, polygonData, listenPlayer\r\n    } = state;\r\n    const player = players.find(player2 => player2.id === listenPlayer);\r\n\r\n    const arrId = polygonData.delaunay.find(player.x, player.y);\r\n    const id = polygonData.beaconIds[arrId];\r\n\r\n    const ghost = players.find(player2 => player2.id === 'Ghost');\r\n    // if (polygonData && polygonData.delaunay) {\r\n    const ghostIndex = polygonData.delaunay.find(ghost.x, ghost.y);\r\n    const ghostIsHere = arrId === ghostIndex;\r\n    // const ghostPolygonId = state.polygonData.beaconIds[ghostIndex];\r\n    // console.log(id);\r\n\r\n    const { beacons } = this.props;\r\n    // const beacon = state.beacons.find(beacon => beacon.id === id);\r\n    const beaconIndex = beacons.findIndex(beacon => beacon.id === id);\r\n    const beacon = beacons[beaconIndex];\r\n    // console.log(beacon);\r\n\r\n    // const { color } = beacon;\r\n    // const color = this.getBeaconColor(beaconIndex);\r\n\r\n    const { sound: curBeaconSound } = beacon.props;\r\n    // const volumes = state.sounds.map((sound) => {\r\n    //   if ((sound.name === 'drums' && color === 'blue')\r\n    //   || (sound.name === 'techno' && color === 'red')\r\n    //   || (sound.name === 'organ' && color === 'green')\r\n    //   ) {\r\n    //     return {\r\n    //       name: sound.name,\r\n    //       gain: 1\r\n    //     };\r\n    //   }\r\n    //   return {\r\n    //     name: sound.name,\r\n    //     gain: 0\r\n    //   };\r\n    // });\r\n\r\n    // const volumes = computeVolumesByDistance(state);\r\n    // applyVolumes(volumes);\r\n    const { audioService } = this.props;\r\n    let volumes = audioService.getSoundNames().map(soundName => ({\r\n      name: soundName,\r\n      // gain: (soundName === curBeaconSound || (ghostIsHere && soundName === 'ghost')) ? 1 : 0\r\n      gain: playAreaSound && (soundName === curBeaconSound) ? 1 : 0\r\n    }));\r\n    if (playGhostSound && ghostIsHere) {\r\n      volumes = volumes.map(sound => ({\r\n        ...sound,\r\n        gain: (sound.name === 'ghost') ? 1 : sound.gain\r\n      }));\r\n    }\r\n\r\n    audioService.applyVolumes(volumes);\r\n  };\r\n\r\n  onMusic = () => {\r\n    this.toggleMusic();\r\n  }\r\n\r\n  onPlayerMove = (event) => {\r\n    this.togglePlayerMove();\r\n  }\r\n  // onChange = (event) => {\r\n  //   const {value} = event.target;\r\n  //   // const event2 = event;\r\n  //   this.setState(state => {\r\n  //     this.crossfade(state);\r\n  //     return {\r\n  //       player: {...state.player, x: value*SVG_WIDTH},\r\n  //       sounds: state.sounds\r\n  //     };\r\n  //   });\r\n  // }\r\n\r\n  listenStub = type => event => console.log(type, event);\r\n\r\n  toggleBeaconMarker = () => {\r\n    this.setState(state => ({\r\n      showBeaconMarkers: !state.showBeaconMarkers\r\n    }));\r\n  }\r\n\r\n  setMovable = id => (event) => {\r\n    // event.stopPropagation();\r\n    // // console.log('setMovable', id);\r\n    // this.setState(state =>\r\n    //   // console.log(state.movableId == null, (state.movableId == null ? null : id));\r\n    //   ({\r\n    //     movableId: (state.movableId == null ? id : null)\r\n    //   }));\r\n  };\r\n\r\n  // clearMovable = (id) => (event) => {\r\n  //   console.log('clearMovable', id);\r\n  //   this.setState({\r\n  //     movableId: null\r\n  //   })\r\n  // };\r\n  moveMovable = (event) => {\r\n    // const rect = document.querySelector('svg.root-image').getBoundingClientRect();\r\n    // // const rect = event.target.getBoundingClientRect();\r\n    // // console.log(event.location);\r\n    // const eX = event.clientX;\r\n    // const eY = event.clientY;\r\n    // const movable = {\r\n    //   x: eX - rect.left,\r\n    //   y: eY - rect.top\r\n    // };\r\n    // this.setState((state) => {\r\n    //   if (state.movableId == null) return null;\r\n\r\n    //   // console.log(state.movableId);\r\n    //   const beacons = state.beacons.map((beacon) => {\r\n    //     if (beacon.id !== state.movableId) return beacon;\r\n    //     return {\r\n    //       ...beacon,\r\n    //       ...movable\r\n    //     };\r\n    //   });\r\n\r\n    //   return {\r\n    //     movable,\r\n    //     beacons,\r\n    //     polygonData: getPolygons(beacons, SVG_WIDTH, SVG_HEIGHT)\r\n    //   };\r\n    // });\r\n  }\r\n\r\n  onStateChange = prop => (e) => {\r\n    this.setState({\r\n      [prop]: e.target.value\r\n    });\r\n  }\r\n\r\n  onCheckboxChange = prop => (e) => {\r\n    this.setState({\r\n      [prop]: e.target.checked\r\n    });\r\n  }\r\n  // listenStub = (type) => (event) => console.log(type, event);\r\n\r\n  render() {\r\n    const {\r\n      sounds, players, playing, soundsLoaded, polygonData, movable, showBeaconMarkers, movePlayers, listenPlayer,\r\n      playGhostSound, playAreaSound\r\n    } = this.state;\r\n    const {\r\n      beacons, svgWidth, svgHeight, audioService\r\n    } = this.props;\r\n\r\n    let ghostPolygonId;\r\n    const player = players.find(player2 => player2.id === 'Ghost');\r\n    if (polygonData && polygonData.delaunay) {\r\n      const arrId = polygonData.delaunay.find(player.x, player.y);\r\n      ghostPolygonId = polygonData.beaconIds[arrId];\r\n    }\r\n\r\n    return (\r\n      <div className=\"Prototype1  flex-row justify-content-center\">\r\n\r\n        <svg\r\n          className=\"root-image margin-2rem\"\r\n          width={svgWidth}\r\n          height={svgHeight}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onMouseMove={this.moveMovable}\r\n          onClick={this.setMovable(null)}\r\n        >\r\n          <defs>\r\n\r\n            <pattern\r\n              id=\"diagonal1\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              patternUnits=\"userSpaceOnUse\"\r\n              patternTransform=\"rotate(45)\"\r\n            >\r\n              <g fill=\"#85D2FF\" fillOpacity=\"0.7\">\r\n                <rect x=\"0\" y=\"0\" width=\"10\" height=\"10\" />\r\n                <rect x=\"0\" y=\"10\" width=\"10\" height=\"10\" />\r\n              </g>\r\n            </pattern>\r\n            <mask id=\"diagonalMask1\" x=\"0\" y=\"0\" width=\"1\" height=\"1\">\r\n              <rect x=\"0\" y=\"0\" width=\"1000\" height=\"1000\" fill=\"url(#diagonal1)\" />\r\n            </mask>\r\n            <pattern\r\n              id=\"diagonal2\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n              width=\"20\"\r\n              height=\"20\"\r\n              patternUnits=\"userSpaceOnUse\"\r\n              patternTransform=\"rotate(-45)\"\r\n            >\r\n\r\n              <g fill=\"#8500FF\" fillOpacity=\"0.7\">\r\n                <rect x=\"10\" y=\"0\" width=\"10\" height=\"10\" />\r\n                <rect x=\"10\" y=\"10\" width=\"10\" height=\"10\" />\r\n              </g>\r\n            </pattern>\r\n\r\n            <mask id=\"diagonalMask2\" x=\"0\" y=\"0\" width=\"1\" height=\"1\">\r\n              <rect x=\"0\" y=\"0\" width=\"1000\" height=\"1000\" fill=\"url(#diagonal2)\" />\r\n            </mask>\r\n          </defs>\r\n          {/* onMouseMove={this.listenStub('onMouseMove')} */}\r\n          {\r\n            polygonData.polygons && polygonData.polygons.map((polygon, i) => (\r\n              <Fragment>\r\n                {/* <polyline fill={polygonData.beaconColors[i] || 'none'} stroke=\"grey\" strokeWidth=\"2\" opacity=\"0.5\" points={polygon.map(pt => pt.join(',')).join(' ')} /> */}\r\n                <polyline\r\n                  fill={audioService.getSoundProps(beacons[i].props.sound).color || 'none'}\r\n                  mask=\"url(#diagonalMask1)\"\r\n                  stroke=\"grey\"\r\n                  strokeWidth=\"2\"\r\n                  opacity=\"0.5\"\r\n                  points={polygon.map(pt => pt.join(',')).join(' ')}\r\n                />\r\n\r\n                {(beacons[i].id === ghostPolygonId) && (\r\n                  <polyline\r\n                    fill=\"black\"\r\n                    mask=\"url(#diagonalMask2)\"\r\n                    stroke=\"grey\"\r\n                    strokeWidth=\"2\"\r\n\r\n                    points={polygon.map(pt => pt.join(',')).join(' ')}\r\n                  />\r\n                )}\r\n\r\n                <polyline\r\n                  fill=\"none\"\r\n                  stroke=\"grey\"\r\n                  strokeWidth=\"2\"\r\n                  opacity=\"0.5\"\r\n                  points={polygon.map(pt => pt.join(',')).join(' ')}\r\n                />\r\n                {/* <circle r=\"2\" cx={polygon.map()x} cy={beacon.y} fill=\"green\"/> */}\r\n                {/* <circle r={sound.soundR} cx={sound.x} cy={sound.y} fill={sound.color} opacity=\"0.2\"/> */}\r\n              </Fragment>\r\n            ))\r\n          }\r\n          {\r\n            polygonData.polygonCenters && polygonData.polygonCenters.map((center, i) => (\r\n              <Fragment>\r\n                {/* <circle r=\"2\" cx={center.x} cy={center.y} fill=\"black\"/> */}\r\n                <text x={center.x} y={center.y + 5} fontSize=\"15\" textAnchor=\"middle\" fill=\"black\">{center.id}</text>\r\n              </Fragment>\r\n            ))\r\n          }\r\n          {\r\n            beacons.map(beacon => (\r\n              <Fragment>\r\n                <MapPoint x={beacon.x} y={beacon.y} fill=\"grey\" />\r\n\r\n                {\r\n                  showBeaconMarkers\r\n                    && (\r\n\r\n                      <MapMarker\r\n                        x={beacon.x}\r\n                        y={beacon.y}\r\n                        id={beacon.id}\r\n                        color={beacon.color}\r\n                        onClick={this.setMovable(beacon.id)}\r\n                      />\r\n                    )\r\n                }\r\n\r\n              </Fragment>\r\n            ))\r\n          }\r\n          {\r\n            players.map(player => (\r\n              <Fragment>\r\n                <ellipse\r\n                  cx={player.startX}\r\n                  cy={player.startY}\r\n                  rx={player.rx}\r\n                  ry={player.ry}\r\n                  fill=\"none\"\r\n                  stroke=\"grey\"\r\n                  strokeWidth=\"2\"\r\n                  opacity=\"0.5\"\r\n                  strokeDasharray=\"15\"\r\n                />\r\n                <circle r=\"5\" cx={player.x} cy={player.y} fill={player.color} />\r\n                <g transform={`translate(${player.x - 25},${player.y - 20}) scale(0.1)`}>\r\n                  <svg\r\n                    version=\"1.1\"\r\n                    id=\"Capa_1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    viewBox=\"0 0 53.545 53.545\"\r\n                  >\r\n                    <g>\r\n                      <g>\r\n                        <circle fill={player.color} cx=\"26.686\" cy=\"4.507\" r=\"4.507\" />\r\n                        <path\r\n                          fill={player.color}\r\n                          d=\"M28.256,11.163c-1.123-0.228-2.344-0.218-3.447,0.042c-7.493,0.878-9.926,9.551-9.239,16.164\r\n                        c0.298,2.859,4.805,2.889,4.504,0c-0.25-2.41-0.143-6.047,1.138-8.632c0,3.142,0,6.284,0,9.425c0,0.111,0.011,0.215,0.016,0.322\r\n                        c-0.003,0.051-0.015,0.094-0.015,0.146c0,7.479-0.013,14.955-0.322,22.428c-0.137,3.322,5.014,3.309,5.15,0\r\n                        c0.242-5.857,0.303-11.717,0.317-17.578c0.244,0.016,0.488,0.016,0.732,0.002c0.015,5.861,0.074,11.721,0.314,17.576\r\n                        c0.137,3.309,5.288,3.322,5.15,0c-0.309-7.473-0.32-14.949-0.32-22.428c0-0.232-0.031-0.443-0.078-0.646\r\n                        c-0.007-3.247-0.131-6.497-0.093-9.742c1.534,2.597,1.674,6.558,1.408,9.125c-0.302,2.887,4.206,2.858,4.504,0\r\n                        C38.678,20.617,36.128,11.719,28.256,11.163z\"\r\n                        />\r\n                      </g>\r\n                    </g>\r\n\r\n                  </svg>\r\n\r\n                </g>\r\n              </Fragment>\r\n            ))\r\n          }\r\n\r\n\r\n          {/* {\r\n              circumcenters.map(beacon => (\r\n                <Fragment>\r\n                  <circle r=\"2\" cx={beacon.x} cy={beacon.y} fill=\"green\"/>\r\n                </Fragment>\r\n              ))\r\n            } */}\r\n          {/* {\r\n                movable && <circle r=\"2\" cx={movable.x} cy={movable.y} fill=\"green\"/>\r\n            } */}\r\n        </svg>\r\n        <br />\r\n        {/* <svg width={SVG_WIDTH} height={SVG_HEIGHT} xmlns=\"http://www.w3.org/2000/svg\">\r\n            {\r\n              sounds.map(sound => (\r\n                <Fragment>\r\n                  <circle r=\"10\" cx={sound.x} cy={sound.y} fill={sound.color}/>\r\n                  <circle r={sound.soundR} cx={sound.x} cy={sound.y} fill={sound.color} opacity=\"0.2\"/>\r\n                </Fragment>\r\n              ))\r\n            }\r\n            {\r\n              players.map(player => <circle r=\"5\" cx={player.x} cy={player.y} fill=\"blue\"/>)\r\n            }\r\n        </svg><br/> */}\r\n        {/* <input type=\"range\" id=\"cowbell\" name=\"cowbell\" disabled={!playing}\r\n         min=\"0\" max=\"1\" value={player.x/SVG_WIDTH} onChange={this.onChange} step=\"0.01\"></input> */}\r\n        {/* <div>\r\n           <span>Player X</span>\r\n           <span>{player.x}</span>\r\n         </div> */}\r\n        {/* <button onClick={this.onMusic} disabled={!soundsLoaded}>Play/Stop Music</button>\r\n         <button onClick={this.onPlayerMove}>Move/Stop Players</button>\r\n         <div>{!soundsLoaded ? 'loading sounds...' : 'sounds loaded'} </div> */}\r\n        {/* <div>\r\n         {\r\n              sounds.map(sound => (\r\n                <div>\r\n                  <span>{sound.name}</span><br/>\r\n                  <span>{sound.ctl && sound.ctl.gainNode.gain.value}</span>\r\n                </div>\r\n              ))\r\n            }\r\n         </div> */}\r\n        <div className=\"margin-2rem\">\r\n          <input id=\"showBeaconMarkersInput\" type=\"checkbox\" onChange={this.toggleBeaconMarker} checked={showBeaconMarkers} />\r\n          <label htmlFor=\"showBeaconMarkersInput\">Show beacon markers</label>\r\n          <br />\r\n\r\n          {/* <button onClick={this.onPlayerMove}>Move/Stop Players</button> */}\r\n          <input id=\"movePlayersInput\" type=\"checkbox\" onChange={this.onPlayerMove} checked={movePlayers} />\r\n          <label htmlFor=\"movePlayersInput\">Move players</label>\r\n          <br />\r\n\r\n          <input id=\"enableMusicInput\" type=\"checkbox\" onChange={this.onMusic} checked={playing} disabled={!soundsLoaded} />\r\n          <label htmlFor=\"enableMusicInput\">Enable music</label>\r\n          <br />\r\n          <input id=\"enableGhostSoundInput\" type=\"checkbox\" onChange={this.onCheckboxChange('playGhostSound')} checked={playGhostSound} disabled={!soundsLoaded} />\r\n          <label htmlFor=\"enableGhostSoundInput\">Enable ghost sound</label>\r\n          <br />\r\n          <input id=\"enableAreaSoundInput\" type=\"checkbox\" onChange={this.onCheckboxChange('playAreaSound')} checked={playAreaSound} disabled={!soundsLoaded} />\r\n          <label htmlFor=\"enableAreaSoundInput\">Enable area sound</label>\r\n          <br />\r\n          <label>Listen player</label>\r\n          <select\r\n            onChange={this.onStateChange('listenPlayer')}\r\n            value={listenPlayer}\r\n          >\r\n            {/* <option value=\"\">No value</option> */}\r\n            {players.map((el, i) => <option value={el.id}>{`${el.id}(${el.color})`}</option>)}\r\n          </select>\r\n          <div>\r\n            {!soundsLoaded ? 'loading sounds...' : 'sounds loaded'}\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import MainPolygon from './MainPolygon.js';\r\n\r\nexport default (MainPolygon);\r\n","import React, { Component, Fragment } from 'react';\r\nimport './MainPolygon.css';\r\nimport { polygon2polyline } from '../../utils/polygonUtils';\r\nimport MapPoint from '../MapPoint';\r\n\r\nexport default class MainPolygon extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const { mainPolygon } = this.props;\r\n    return (\r\n      <Fragment>\r\n\r\n        <polyline\r\n          fill=\"none\"\r\n          stroke=\"red\"\r\n          strokeWidth=\"4\"\r\n          opacity=\"0.5\"\r\n          points={polygon2polyline(mainPolygon)}\r\n        />\r\n        {\r\n          mainPolygon.map(point => <MapPoint x={point[0]} y={point[1]} r={5} />)\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Map.css';\r\n\r\nexport default class Map extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      imagePositionX,\r\n      imagePositionY, imageOpacity, imageScale, svgWidth, svgHeight, onPropChange,\r\n      children, onClick, imageUrl\r\n    } = this.props;\r\n\r\n    const imageStyle = {\r\n      background: `linear-gradient(to bottom,\r\n                    rgba(255,255,255,${imageOpacity / 100}) 0%,\r\n                    rgba(255,255,255,${imageOpacity / 100}) 100%),\r\n                    url(${imageUrl}) no-repeat ${imagePositionX}% ${imagePositionY}% / ${imageScale}px auto`,\r\n      // backgroundSize: `${imageScale}% auto`,\r\n      // backgroundPosition: `${imagePositionX}% ${imagePositionY}%`\r\n    };\r\n    // {...this.props}\r\n    return (\r\n      <svg\r\n        className=\"root-image margin-2rem\"\r\n        width={svgWidth}\r\n        height={svgHeight}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        style={imageStyle}\r\n        {...this.props}\r\n      >\r\n        {/* onClick={onClick} */}\r\n        {children}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nMap.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nMap.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n","// import { withTranslation } from 'react-i18next';\r\nimport Map from './Map.js';\r\n\r\nexport default (Map);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MapEditor.css';\r\n\r\n// import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport MainPolygon from '../MainPolygon';\r\n\r\nimport Map from '../Map';\r\n\r\n// const SVG_WIDTH = 500;\r\n// const SVG_HEIGHT = 400;\r\n\r\nexport default class MapEditor extends Component {\r\n  state = {\r\n  };\r\n\r\n  onFileUpload = (evt) => {\r\n    const {\r\n      setImageUrl\r\n    } = this.props;\r\n    console.log(evt);\r\n    const f = evt.target.files[0];\r\n\r\n    if (f) {\r\n      const r = new FileReader();\r\n      r.onload = (e) => {\r\n        const contents = e.target.result;\r\n        // console.log(contents);\r\n        setImageUrl(contents);\r\n        // try {\r\n        //   const object = JSON.parse(contents);\r\n        //   // resolve(object);\r\n        // } catch (err) {\r\n        //   // reject(err);\r\n        // }\r\n      };\r\n      r.readAsDataURL(f);\r\n    } else {\r\n      // UI.alert(L10n.getValue('utils-base-file-loading-error'));\r\n      // reject(new Error('utils-base-file-loading-error'));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      imagePositionX, imagePositionY, imageOpacity, imageScale, svgWidth, svgHeight, onPropChange, mainPolygon,\r\n      imageUrl, toDefaultImageUrl\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"MapEditor flex-row justify-content-center\">\r\n        <Form className=\"margin-2rem\">\r\n          <h3>Canvas parameters</h3>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>svgWidth, px</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('svgWidth')}\r\n                placeholder=\"svgWidth\"\r\n                value={svgWidth}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>svgHeight, px</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('svgHeight')}\r\n                placeholder=\"svgHeight\"\r\n                value={svgHeight}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <h3>Background parameters</h3>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>image</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={this.onFileUpload}\r\n                // onChange={onPropChange('imageOpacity')}\r\n                // placeholder=\"imageOpacity\"\r\n                // value={imageOpacity}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>imagePositionX, %</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('imagePositionX')}\r\n                placeholder=\"imagePositionX\"\r\n                value={imagePositionX}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>imagePositionY, %</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('imagePositionY')}\r\n                placeholder=\"imagePositionY\"\r\n                value={imagePositionY}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>imageWidth, px</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('imageScale')}\r\n                placeholder=\"imageScale\"\r\n                value={imageScale}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>imageOpacity, %</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={onPropChange('imageOpacity')}\r\n                placeholder=\"imageOpacity\"\r\n                value={imageOpacity}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Button onClick={toDefaultImageUrl}>Set default image</Button>\r\n\r\n        </Form>\r\n        {/* <svg\r\n          className=\"root-image\"\r\n          width={svgWidth}\r\n          height={svgHeight}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          style={imageStyle}\r\n        /> */}\r\n        <Map\r\n          className=\"margin-2rem\"\r\n          imagePositionX={imagePositionX}\r\n          imagePositionY={imagePositionY}\r\n          imageOpacity={imageOpacity}\r\n          imageScale={imageScale}\r\n          svgWidth={svgWidth}\r\n          svgHeight={svgHeight}\r\n          imageUrl={imageUrl}\r\n        >\r\n          <MainPolygon mainPolygon={mainPolygon} />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMapEditor.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nMapEditor.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n","// import { withTranslation } from 'react-i18next';\r\nimport MapEditor from './MapEditor.js';\r\n\r\nexport default (MapEditor);\r\n","\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { saveAs } from 'file-saver';\r\n\r\n//const R = require('ramda');\r\n// const { saveAs } = require('file-saver');\r\n// const CU = require('./common/commonUtils');\r\n\r\n// exports.makeNewBase = base => new Promise((resolve, reject) => {\r\n//   UI.confirm(L10n.getValue('utils-new-base-warning'), () => {\r\n//     DBMS.setDatabase({ database: R.clone(base.data) }).then(() => {\r\n//       resolve(true);\r\n//       // TestUtils.addGroupTestingData();\r\n//     }).catch(reject);\r\n//   }, () => resolve(false));\r\n// });\r\n\r\n// exports.openHelp = () => {\r\n//   window.open('extras/doc/nims.html');\r\n// };\r\n\r\nconst readJsonFile = evt => new Promise((resolve, reject) => {\r\n  // Retrieve the first (and only!) File from the FileList object\r\n  const f = evt.target.files[0];\r\n\r\n  if (f) {\r\n    const r = new FileReader();\r\n    r.onload = (e) => {\r\n      const contents = e.target.result;\r\n      try {\r\n        const object = JSON.parse(contents);\r\n        resolve(object);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    };\r\n    r.readAsText(f);\r\n  } else {\r\n    // UI.alert(L10n.getValue('utils-base-file-loading-error'));\r\n    reject(new Error('utils-base-file-loading-error'));\r\n  }\r\n});\r\n\r\nconst readBinaryFile = evt => new Promise((resolve, reject) => {\r\n  // Retrieve the first (and only!) File from the FileList object\r\n  const f = evt.target.files[0];\r\n\r\n  if (f) {\r\n    const r = new FileReader();\r\n    r.onload = (e) => {\r\n      const contents = e.target.result;\r\n      resolve({\r\n        name: f.name,\r\n        buffer: contents\r\n      });\r\n    };\r\n    r.readAsArrayBuffer(f);\r\n  } else {\r\n    // UI.alert(L10n.getValue('utils-base-file-loading-error'));\r\n    reject(new Error('utils-base-file-loading-error'));\r\n  }\r\n});\r\n\r\n// eslint-disable-next-line no-useless-escape\r\nconst illegalRe = /[\\/\\?<>\\\\:\\*\\|\":]/g;\r\n// eslint-disable-next-line no-control-regex\r\nconst controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\nconst reservedRe = /^\\.+$/;\r\nconst windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n// eslint-disable-next-line no-useless-escape\r\nconst windowsTrailingRe = /[\\. ]+$/;\r\n\r\nfunction sanitizeStr2FileName(input, replacement) {\r\n  replacement = replacement || '';\r\n  const sanitized = input\r\n    .replace(illegalRe, replacement)\r\n    .replace(controlRe, replacement)\r\n    .replace(reservedRe, replacement)\r\n    .replace(windowsReservedRe, replacement)\r\n    .replace(windowsTrailingRe, replacement);\r\n  return sanitized.substring(0, 255);\r\n}\r\n\r\nfunction makeFileName(root, extension, date) {\r\n  date = date || new Date();\r\n  const timeStr = dateFormat(date, 'dd-mmm-yyyy_HH-MM-ss');\r\n  const fileName = `${root}_${timeStr}`;\r\n  return `${sanitizeStr2FileName(fileName)}.${extension}`;\r\n}\r\n\r\nfunction json2File(str, fileName) {\r\n  str2File(JSON.stringify(str, null, '  '), fileName);\r\n}\r\n\r\nfunction str2File(str, fileName) {\r\n  const blob = new Blob([str], {\r\n    type: 'text/plain;charset=utf-8'\r\n  });\r\n  saveAs(blob, fileName);\r\n}\r\n\r\nexport {\r\n  json2File, makeFileName, readJsonFile, readBinaryFile\r\n};\r\n\r\n// function preprocessCsvStr(str) {\r\n//   if (!(typeof str === 'string' || str instanceof String)) {\r\n//     return str;\r\n//   }\r\n//   let result = str.replace(/\"/g, '\"\"');\r\n//   if (result.search(/(\"|,|\\n)/g) >= 0) {\r\n//     result = `\"${result}\"`;\r\n//   }\r\n//   return result;\r\n// }\r\n\r\n// exports.arr2d2Csv = (arr, fileName) => {\r\n//   const csv = `\\ufeff${arr.map(dataArray => dataArray.map(preprocessCsvStr).join(';')).join('\\n')}`;\r\n\r\n//   const out = new Blob([csv], {\r\n//     type: 'text/csv;charset=utf-8;'\r\n//   });\r\n//   saveAs(out, exports.makeFileName(fileName, 'csv'));\r\n// };\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MusicEditor.css';\r\nimport * as R from 'ramda';\r\n\r\nimport { readBinaryFile } from '../../utils/fileUtils';\r\n\r\nexport default class MusicEditor extends Component {\r\n  state = {\r\n    buffers: [],\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    console.log('MusicEditor mounted');\r\n    const { audioService } = this.props;\r\n    audioService.isLoaded.then(() => this.setState({\r\n      loading: false,\r\n      buffers: this.getBuffers()\r\n    }));\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    console.log('MusicEditor did update');\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    console.log('MusicEditor will unmount');\r\n  }\r\n\r\n  getBuffers = () => this.props.audioService.getBuffers().map(R.pick(['name', 'props']));\r\n\r\n  updateBufferNames = () => this.setState({\r\n    buffers: this.getBuffers()\r\n  });\r\n\r\n  onSoundSelected = (evt) => {\r\n    readBinaryFile(evt).then((result) => {\r\n      this.props.audioService.addAudioFile(result).then(this.updateBufferNames);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading, buffers } = this.state;\r\n    const { audioService } = this.props;\r\n\r\n    return (\r\n      <div className=\"MusicEditor  margin-2rem\">\r\n        {\r\n          loading && 'loading'\r\n        }\r\n        {\r\n          <table className=\"beaconTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                buffers.map(buffer => (\r\n                  <tr>\r\n                    <td>\r\n                      {/* <input\r\n                        value={bufferInfo.name}\r\n                      /> */}\r\n                      <span>{buffer.name}</span>\r\n                      {/* onChange={this.onBeaconChange(beacon.id, 'id')} */}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          audioService.removeSound(buffer.name);\r\n                          this.updateBufferNames();\r\n                        }}\r\n                      >Remove\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => audioService.startSound(buffer.name)}\r\n                      >Play\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => audioService.stopSound(buffer.name)}\r\n                      >Stop\r\n                      </button>\r\n                      <input\r\n                        type=\"color\"\r\n                        value={buffer.props.color}\r\n                      />\r\n                      {/* // onClick={() => audioService.stopSound(bufferName)} */}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n        <input type=\"file\" onChange={this.onSoundSelected} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMusicEditor.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nMusicEditor.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n","// import { withTranslation } from 'react-i18next';\r\nimport MusicEditor from './MusicEditor.js';\r\n\r\n// export default withTranslation()(MusicEditor);\r\nexport default (MusicEditor);\r\n","import React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\n// import './Icons.css';\r\n// import '@fortawesome/fontawesome-free/css/all.css';\r\nimport * as R from 'ramda';\r\nimport shortid from 'shortid';\r\n\r\nimport {\r\n  BrowserRouter as Router, Switch, Route, Redirect, Link, NavLink\r\n} from 'react-router-dom';\r\n\r\n// import AudioService from '../../services/audioService';\r\n\r\n\r\n// import getBeacons from '../../utils/gpxExperiment';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Prototype1 from '../Prototype1';\r\nimport MapEditor from '../MapEditor';\r\nimport MusicEditor from '../MusicEditor';\r\nimport Beacons from '../Beacons';\r\nimport ErrorBoundry from '../ErrorBoundry';\r\n\r\nimport { json2File, makeFileName, readJsonFile } from '../../utils/fileUtils';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// console.log(getBeacons(100, 100, 600, 500));\r\n\r\nconst STORAGE_KEY = 'AR_POC';\r\n\r\nconst defaultImgUrl = '/images/backgroundImage.jpg';\r\n\r\nlet initialState;\r\n// let audioData = [];\r\nconst database = localStorage.getItem(STORAGE_KEY);\r\nif (database) {\r\n  const parsedDb = JSON.parse(database);\r\n  initialState = parsedDb.appState;\r\n  // audioData = database.audioData;\r\n  // console.log('audioData', audioData);\r\n  // initialState.beacons = getBeacons(100, 100, initialState.svgWidth - 200, initialState.svgHeight - 200).map(beacon => ({\r\n  //   ...beacon,\r\n  //   props: {\r\n  //     sound: 'none'\r\n  //   }\r\n  // }));\r\n} else {\r\n  initialState = {\r\n    svgWidth: 800,\r\n    svgHeight: 581,\r\n    imagePositionX: 50,\r\n    imagePositionY: 68,\r\n    imageOpacity: 80,\r\n    imageScale: 800,\r\n    beacons: [],\r\n    mainPolygon: [[324, 80], [128, 370], [543, 560], [610, 454], [459, 414], [458, 302], [428, 301], [423, 135], [348, 79], [324, 80]],\r\n    imageUrl: defaultImgUrl\r\n  };\r\n}\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    ...initialState,\r\n    showBeaconsTab: true\r\n  };\r\n\r\n  // audioService = new AudioService();\r\n\r\n  componentDidMount() {\r\n    // initSound(() => {\r\n    //   this.setState({\r\n    //     soundsLoaded: true\r\n    //   });\r\n    // });\r\n    // this.animatePlayer();\r\n    setInterval(() => {\r\n      console.log('saving backup');\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this.prepareDataForJson()));\r\n    }, 10000);\r\n  }\r\n\r\n  prepareDataForJson = () =>\r\n    // console.log('sdfs');\r\n    // const data = this.audioService.toJson();\r\n    // console.log()\r\n    // this.audioService.fromJson(data);\r\n    ({\r\n      appState: this.state,\r\n      // audioData: data\r\n    })\r\n\r\n\r\n  onStateChange = prop => (e) => {\r\n    // console.log('prop');\r\n    this.setState({\r\n      [prop]: e.target.value\r\n    });\r\n  }\r\n\r\n  setBeacons = (beacons) => {\r\n    // console.log('prop');\r\n    this.setState({\r\n      beacons\r\n    });\r\n  }\r\n\r\n  setMainPolygon = (mainPolygon) => {\r\n    // console.log('prop');\r\n    this.setState({\r\n      mainPolygon\r\n    });\r\n  }\r\n\r\n  setImageUrl = (imageUrl) => {\r\n    // console.log('prop');\r\n    this.setState({\r\n      imageUrl\r\n    });\r\n  }\r\n\r\n  toDefaultImageUrl = () => this.setImageUrl(defaultImgUrl);\r\n\r\n  downloadDatabaseAsFile = () => {\r\n    json2File(this.prepareDataForJson(), makeFileName('SR_acoustic_poc', 'json', new Date()));\r\n  };\r\n\r\n  uploadDatabaseFile = (evt) => {\r\n    const input = evt.target.querySelector('input');\r\n    if (input) {\r\n      input.value = '';\r\n      input.click();\r\n    }\r\n  };\r\n\r\n  onFileSelected = (evt) => {\r\n    readJsonFile(evt).then((database2) => {\r\n      console.log(database2.appState);\r\n      this.setState(database2.appState);\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const {\r\n      imagePositionX, imagePositionY, imageOpacity, imageScale, svgWidth, svgHeight, beacons, mainPolygon, imageUrl, showBeaconsTab\r\n    } = this.state;\r\n\r\n    return (\r\n      <ErrorBoundry>\r\n\r\n        {/* <Router> */}\r\n        <div className=\"App\">\r\n          <header>\r\n            <nav className=\"view-switch\">\r\n              <ul>\r\n                <li>\r\n                  {/* <NavLink to=\"/mapEditor\">Map Editor</NavLink> */}\r\n                  <Button\r\n                    variant={showBeaconsTab ? 'default' : 'primary'}\r\n                    onClick={() => (this.setState({\r\n                      showBeaconsTab: false\r\n                    }))}\r\n                  >Map Editor\r\n                  </Button>\r\n                </li>\r\n                <li>\r\n                  {/* <NavLink to=\"/beacons\">Beacons</NavLink> */}\r\n                  <Button\r\n                    variant={!showBeaconsTab ? 'default' : 'primary'}\r\n                    onClick={() => (this.setState({\r\n                      showBeaconsTab: true\r\n                    }))}\r\n                  >Beacons\r\n                  </Button>\r\n                </li>\r\n                {/* <li>\r\n                    <NavLink to=\"/soundManager\">Sound Manager</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <NavLink to=\"/demo\">Demo</NavLink>\r\n                  </li> */}\r\n              </ul>\r\n\r\n              <ul>\r\n                <li>\r\n                  {/* className=\"dataLoadButton icon-button action-button mainNavButton\" */}\r\n                  <button\r\n                    type=\"button\"\r\n                    data-original-title=\"\"\r\n                    title=\"Upload database\"\r\n                    onClick={this.uploadDatabaseFile}\r\n                  >\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"display-none\"\r\n                      tabIndex=\"-1\"\r\n                      onChange={this.onFileSelected}\r\n                    />\r\n                      Upload database\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  {/* className=\"dataSaveButton icon-button action-button mainNavButton\" */}\r\n                  <button\r\n                    type=\"button\"\r\n                    data-original-title=\"\"\r\n                    onClick={this.downloadDatabaseAsFile}\r\n                    title=\"Download database\"\r\n                  >Download database\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </header>\r\n\r\n          <main>\r\n\r\n            {/* <Switch> */}\r\n            {/* <Route path=\"/mapEditor\"> */}\r\n            {!showBeaconsTab && (\r\n              <MapEditor\r\n                imagePositionX={imagePositionX}\r\n                imagePositionY={imagePositionY}\r\n                imageOpacity={imageOpacity}\r\n                imageScale={imageScale}\r\n                svgWidth={svgWidth}\r\n                svgHeight={svgHeight}\r\n                onPropChange={this.onStateChange}\r\n                mainPolygon={mainPolygon}\r\n                imageUrl={imageUrl}\r\n                setImageUrl={this.setImageUrl}\r\n                toDefaultImageUrl={this.toDefaultImageUrl}\r\n              />\r\n            )}\r\n            {/* </Route>\r\n                <Route path=\"/beacons\"> */}\r\n            {showBeaconsTab && (\r\n              <Beacons\r\n                imagePositionX={imagePositionX}\r\n                imagePositionY={imagePositionY}\r\n                imageOpacity={imageOpacity}\r\n                imageScale={imageScale}\r\n                svgWidth={svgWidth}\r\n                svgHeight={svgHeight}\r\n                beacons={beacons}\r\n                setBeacons={this.setBeacons}\r\n                mainPolygon={mainPolygon}\r\n                setMainPolygon={this.setMainPolygon}\r\n                audioService={this.audioService}\r\n                imageUrl={imageUrl}\r\n              />\r\n            )}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/soundManager\">\r\n                  <MusicEditor audioService={this.audioService} />\r\n                </Route>\r\n                <Route path=\"/demo\">\r\n                  <Prototype1\r\n                    svgWidth={svgWidth}\r\n                    svgHeight={svgHeight}\r\n                    beacons={beacons}\r\n                    audioService={this.audioService}\r\n                  />\r\n                </Route> */}\r\n\r\n            {/* <Route render={() => <Redirect to=\"/beacons\" />} /> */}\r\n            {/* </Switch> */}\r\n          </main>\r\n        </div>\r\n        {/* </Router> */}\r\n      </ErrorBoundry>\r\n\r\n    );\r\n  }\r\n}\r\n","import BeaconTable from './BeaconTable.js';\r\n\r\nexport default (BeaconTable);\r\n","import React, { Component } from 'react';\r\nimport './BeaconTable.css';\r\nimport * as R from 'ramda';\r\n\r\nexport default class BeaconTable extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      audioService, beacons, onTableHover, onBeaconChange, onBeaconPropChange, onBeaconPropCheckboxChange,\r\n      onBeaconRemove\r\n    } = this.props;\r\n    return (\r\n      <table className=\"beaconTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>id</th>\r\n            <th>x</th>\r\n            <th>y</th>\r\n            {/* <th>sound</th> */}\r\n            <th>fix position</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            beacons.map((beacon, i) => (\r\n              <tr onMouseOver={onTableHover(beacon.id)}>\r\n                <td>{i + 1}</td>\r\n                <td>\r\n                  <input value={beacon.id} onChange={onBeaconChange(beacon.id, 'id')} />\r\n                </td>\r\n                <td>\r\n                  <input className=\"coordInput\" value={beacon.x} type=\"number\" onChange={onBeaconChange(beacon.id, 'x')} />\r\n                </td>\r\n                <td>\r\n                  <input className=\"coordInput\" value={beacon.y} type=\"number\" onChange={onBeaconChange(beacon.id, 'y')} />\r\n                </td>\r\n\r\n                {/* <td>\r\n                  <select value={beacon.props.sound} onChange={onBeaconPropChange(beacon.id, 'sound')}>\r\n                    {\r\n                      ['none'].concat(audioService.getBuffers().map(R.prop('name'))).map(soundName => <option value={soundName}>{soundName}</option>)\r\n                    }\r\n                  </select>\r\n                </td> */}\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={onBeaconPropCheckboxChange(beacon.id, 'positionFixed')}\r\n                    checked={beacon.props.positionFixed}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button type=\"button\" onClick={onBeaconRemove(beacon.id)}>Remove</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import PolygonTable from './PolygonTable.js';\r\n\r\nexport default (PolygonTable);\r\n","import React, { Component } from 'react';\r\nimport './PolygonTable.css';\r\n\r\nexport default class PolygonTable extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const { mainPolygon, onPointChange } = this.props;\r\n    return (\r\n      <table className=\"beaconTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>x</th>\r\n            <th>y</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            mainPolygon.map((point, i) => (\r\n              <tr>\r\n                <td>{i + 1}</td>\r\n                <td>\r\n                  <input className=\"coordInput\" value={point[0]} type=\"number\" onChange={onPointChange(i, 0)} />\r\n                </td>\r\n                <td>\r\n                  <input className=\"coordInput\" value={point[1]} type=\"number\" onChange={onPointChange(i, 1)} />\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import SettingsForm from './SettingsForm.js';\r\n\r\nexport default (SettingsForm);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { Component } from 'react';\r\nimport './SettingsForm.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class SettingsForm extends Component {\r\n  state = {\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      showBeaconMarkers, showPolygonLabels, showPolygonBoundaries, showMassCenters, showBeaconSignalArea, signalRadius,\r\n      enableAutoIteration, maxDelta, showTracks\r\n    } = this.props;\r\n    const {\r\n      toggleCheckbox, onStateChange, nextIteration, clearPolygon, clearBeacons, clearTracks\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"flex-row\">\r\n\r\n        <div className=\"margin-1rem\">\r\n\r\n          <input\r\n            id=\"showBeaconMarkersInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showBeaconMarkers')}\r\n            checked={showBeaconMarkers}\r\n          />\r\n          <label htmlFor=\"showBeaconMarkersInput\">Show beacon markers</label>\r\n          <br />\r\n          <input\r\n            id=\"showPolygonLabelsInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showPolygonLabels')}\r\n            checked={showPolygonLabels}\r\n          />\r\n          <label htmlFor=\"showPolygonLabelsInput\">Show polygon labels</label>\r\n          <br />\r\n          <input\r\n            id=\"showPolygonBoundariesInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showPolygonBoundaries')}\r\n            checked={showPolygonBoundaries}\r\n          />\r\n          <label htmlFor=\"showPolygonBoundariesInput\">Show polygon boundaries</label>\r\n          <br />\r\n\r\n          <input\r\n            id=\"showMassCentersInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showMassCenters')}\r\n            checked={showMassCenters}\r\n          />\r\n          <label htmlFor=\"showMassCentersInput\">Show mass centers</label>\r\n          <br />\r\n\r\n          <input\r\n            id=\"showTracksInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showTracks')}\r\n            checked={showTracks}\r\n          />\r\n          <label htmlFor=\"showTracksInput\">Show tracks</label>\r\n          <br />\r\n\r\n          <input\r\n            id=\"showBeaconSignalAreaInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('showBeaconSignalArea')}\r\n            checked={showBeaconSignalArea}\r\n          />\r\n          <label htmlFor=\"showBeaconSignalAreaInput\">Show beacon signal area</label>\r\n          <br />\r\n          <div>\r\n            <label>Signal radius</label><br />\r\n            <input type=\"number\" value={signalRadius} onChange={onStateChange('signalRadius')} />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"margin-1rem\">\r\n          <input\r\n            id=\"enableAutoIterationInput\"\r\n            type=\"checkbox\"\r\n            onChange={toggleCheckbox('enableAutoIteration')}\r\n            checked={enableAutoIteration}\r\n          />\r\n          <label htmlFor=\"enableAutoIterationInput\">Enable auto iteration</label>\r\n          <br />\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={nextIteration}\r\n          >Next iteration\r\n          </Button>\r\n\r\n          <div>\r\n            <label>Delta (stop condition)</label><br />\r\n            <input type=\"number\" value={maxDelta} onChange={onStateChange('maxDelta')} />\r\n          </div>\r\n        </div>\r\n        <div className=\"margin-1rem\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={clearPolygon}\r\n            className=\"margin-right-1rem margin-bottom-1rem\"\r\n          >Clear main polygon\r\n          </Button>\r\n          <br />\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={clearBeacons}\r\n            className=\"margin-right-1rem margin-bottom-1rem\"\r\n          >Clear beacons\r\n          </Button>\r\n          <br />\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={clearTracks}\r\n            className=\"margin-right-1rem margin-bottom-1rem\"\r\n          >Clear tracks\r\n          </Button>\r\n          <br />\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","export default [\r\n  {\r\n    color: {\r\n      border: '#2B7CE9',\r\n      background: '#97C2FC',\r\n      highlight: { border: '#2B7CE9', background: '#D2E5FF' },\r\n      hover: { border: '#2B7CE9', background: '#D2E5FF' }\r\n    }\r\n  }, // 0: blue\r\n  {\r\n    color: {\r\n      border: '#FFA500',\r\n      background: '#FFFF00',\r\n      highlight: { border: '#FFA500', background: '#FFFFA3' },\r\n      hover: { border: '#FFA500', background: '#FFFFA3' }\r\n    }\r\n  }, // 1: yellow\r\n  {\r\n    color: {\r\n      border: '#FA0A10', background: '#FB7E81', highlight: { border: '#FA0A10', background: '#FFAFB1' }, hover: { border: '#FA0A10', background: '#FFAFB1' }\r\n    }\r\n  }, // 2: red\r\n  {\r\n    color: {\r\n      border: '#41A906', background: '#7BE141', highlight: { border: '#41A906', background: '#A1EC76' }, hover: { border: '#41A906', background: '#A1EC76' }\r\n    }\r\n  }, // 3: green\r\n  {\r\n    color: {\r\n      border: '#E129F0', background: '#EB7DF4', highlight: { border: '#E129F0', background: '#F0B3F5' }, hover: { border: '#E129F0', background: '#F0B3F5' }\r\n    }\r\n  }, // 4: magenta\r\n  {\r\n    color: {\r\n      border: '#7C29F0', background: '#AD85E4', highlight: { border: '#7C29F0', background: '#D3BDF0' }, hover: { border: '#7C29F0', background: '#D3BDF0' }\r\n    }\r\n  }, // 5: purple\r\n  {\r\n    color: {\r\n      border: '#C37F00', background: '#FFA807', highlight: { border: '#C37F00', background: '#FFCA66' }, hover: { border: '#C37F00', background: '#FFCA66' }\r\n    }\r\n  }, // 6: orange\r\n  {\r\n    color: {\r\n      border: '#4220FB', background: '#6E6EFD', highlight: { border: '#4220FB', background: '#9B9BFD' }, hover: { border: '#4220FB', background: '#9B9BFD' }\r\n    }\r\n  }, // 7: darkblue\r\n  {\r\n    color: {\r\n      border: '#FD5A77', background: '#FFC0CB', highlight: { border: '#FD5A77', background: '#FFD1D9' }, hover: { border: '#FD5A77', background: '#FFD1D9' }\r\n    }\r\n  }, // 8: pink\r\n  {\r\n    color: {\r\n      border: '#4AD63A', background: '#C2FABC', highlight: { border: '#4AD63A', background: '#E6FFE3' }, hover: { border: '#4AD63A', background: '#E6FFE3' }\r\n    }\r\n  }, // 9: mint\r\n\r\n  {\r\n    color: {\r\n      border: '#990000', background: '#EE0000', highlight: { border: '#BB0000', background: '#FF3333' }, hover: { border: '#BB0000', background: '#FF3333' }\r\n    }\r\n  }, // 10:bright red\r\n\r\n  {\r\n    color: {\r\n      border: '#FF6000', background: '#FF6000', highlight: { border: '#FF6000', background: '#FF6000' }, hover: { border: '#FF6000', background: '#FF6000' }\r\n    }\r\n  }, // 12: real orange\r\n  {\r\n    color: {\r\n      border: '#97C2FC', background: '#2B7CE9', highlight: { border: '#D2E5FF', background: '#2B7CE9' }, hover: { border: '#D2E5FF', background: '#2B7CE9' }\r\n    }\r\n  }, // 13: blue\r\n  {\r\n    color: {\r\n      border: '#399605', background: '#255C03', highlight: { border: '#399605', background: '#255C03' }, hover: { border: '#399605', background: '#255C03' }\r\n    }\r\n  }, // 14: green\r\n  {\r\n    color: {\r\n      border: '#B70054', background: '#FF007E', highlight: { border: '#B70054', background: '#FF007E' }, hover: { border: '#B70054', background: '#FF007E' }\r\n    }\r\n  }, // 15: magenta\r\n  {\r\n    color: {\r\n      border: '#AD85E4', background: '#7C29F0', highlight: { border: '#D3BDF0', background: '#7C29F0' }, hover: { border: '#D3BDF0', background: '#7C29F0' }\r\n    }\r\n  }, // 16: purple\r\n  {\r\n    color: {\r\n      border: '#4557FA', background: '#000EA1', highlight: { border: '#6E6EFD', background: '#000EA1' }, hover: { border: '#6E6EFD', background: '#000EA1' }\r\n    }\r\n  }, // 17: darkblue\r\n  {\r\n    color: {\r\n      border: '#FFC0CB', background: '#FD5A77', highlight: { border: '#FFD1D9', background: '#FD5A77' }, hover: { border: '#FFD1D9', background: '#FD5A77' }\r\n    }\r\n  }, // 18: pink\r\n  {\r\n    color: {\r\n      border: '#C2FABC', background: '#74D66A', highlight: { border: '#E6FFE3', background: '#74D66A' }, hover: { border: '#E6FFE3', background: '#74D66A' }\r\n    }\r\n  }, // 19: mint\r\n\r\n  {\r\n    color: {\r\n      border: '#EE0000', background: '#990000', highlight: { border: '#FF3333', background: '#BB0000' }, hover: { border: '#FF3333', background: '#BB0000' }\r\n    }\r\n  } // 20:bright red\r\n];\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { Component, Fragment } from 'react';\r\nimport './Beacons.css';\r\nimport shortid from 'shortid';\r\nimport * as R from 'ramda';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Map from '../Map';\r\nimport MapMarker from '../MapMarker';\r\nimport MapPoint from '../MapPoint';\r\nimport getPolygons from '../../utils/polygonGenerator';\r\n\r\nimport BeaconTable from './BeaconTable';\r\nimport PolygonTable from './PolygonTable';\r\nimport SettingsForm from './SettingsForm';\r\nimport MainPolygon from '../MainPolygon';\r\n\r\nimport ColorPalette from '../../utils/colorPalette';\r\n\r\nimport { polygon2polyline, euDist } from '../../utils/polygonUtils';\r\n\r\nlet tracks = [];\r\n\r\nexport default class Beacons extends Component {\r\n  state = {\r\n    showBeaconMarkers: true,\r\n    showPolygonLabels: false,\r\n    showPolygonBoundaries: true,\r\n    showBeaconSignalArea: false,\r\n    showMassCenters: true,\r\n    showTracks: true,\r\n    enableAutoIteration: false,\r\n    maxDelta: 1,\r\n    signalRadius: 40,\r\n    // addBeacon, editPolygon\r\n    mode: 'addBeacon',\r\n    // editingPolygon: false,\r\n    // mainPolygon: [[324.375, 80], [128.375, 370], [543.375, 560], [610.375, 454], [459.375, 414], [458.375, 302], [428.375, 301], [423.375, 135], [348.375, 79], [324.375, 80]],\r\n    // tracks: []\r\n  };\r\n\r\n  getClickCoords = (event) => {\r\n    const rect = document.querySelector('svg.root-image').getBoundingClientRect();\r\n    const eX = event.clientX;\r\n    const eY = event.clientY;\r\n    const x = Math.round(eX - rect.left);\r\n    const y = Math.round(eY - rect.top);\r\n    return { x, y };\r\n  }\r\n\r\n  addBeacon = (event) => {\r\n    const { x, y } = this.getClickCoords(event);\r\n\r\n    const newBeacon = {\r\n      x,\r\n      y,\r\n      id: shortid.generate(),\r\n      props: {\r\n        sound: 'none'\r\n      }\r\n    };\r\n\r\n    const { beacons, setBeacons } = this.props;\r\n    tracks = [];\r\n    setBeacons([...beacons, newBeacon]);\r\n  }\r\n\r\n  addMainPolygonPoint = (event) => {\r\n    const { x, y } = this.getClickCoords(event);\r\n    const { mainPolygon, setMainPolygon } = this.props;\r\n    let newPoint = [x, y];\r\n    if (mainPolygon.length > 0) {\r\n      const [x1, y1] = mainPolygon[0];\r\n\r\n      const dist = euDist({ x, y }, { x: x1, y: y1 });\r\n      if (dist < 20) {\r\n        newPoint = [x1, y1];\r\n      }\r\n      // if (x1[0] === x[0] && y1[1] === y[1]) {\r\n      //   return;\r\n      // }\r\n    }\r\n    let polygon = mainPolygon;\r\n    if (mainPolygon.length > 1) {\r\n      const first = mainPolygon[0];\r\n      const last = mainPolygon[mainPolygon.length - 1];\r\n      if (first[0] === last[0] && first[1] === last[1]) {\r\n        polygon = [];\r\n      }\r\n    }\r\n    setMainPolygon([...polygon, newPoint]);\r\n  }\r\n\r\n  onBeaconChange = (id, prop) => (e) => {\r\n    const { value } = e.target;\r\n    const { beacons, setBeacons } = this.props;\r\n    const index = beacons.findIndex(beacon => beacon.id === id);\r\n    const beacons2 = [...beacons];\r\n    beacons2[index] = {\r\n      ...beacons2[index],\r\n      [prop]: value\r\n    };\r\n    setBeacons(beacons2);\r\n  }\r\n\r\n  onMainPolygonPointChange = (index, coord) => (e) => {\r\n    const { value } = e.target;\r\n    const { mainPolygon, setMainPolygon } = this.props;\r\n    const newPoint = [...mainPolygon[index]];\r\n    newPoint[coord] = Number(value);\r\n    const newPolygon = [...mainPolygon];\r\n    newPolygon[index] = newPoint;\r\n\r\n    setMainPolygon(newPolygon);\r\n  }\r\n\r\n  onBeaconPropChange = (id, prop) => (e) => {\r\n    const { value } = e.target;\r\n    const { beacons, setBeacons } = this.props;\r\n    const index = beacons.findIndex(beacon => beacon.id === id);\r\n    const beacons2 = [...beacons];\r\n    beacons2[index] = {\r\n      ...beacons2[index],\r\n      props: {\r\n        ...beacons2[index].props,\r\n        [prop]: value\r\n      }\r\n    };\r\n    setBeacons(beacons2);\r\n  }\r\n\r\n  onBeaconPropCheckboxChange = (id, prop) => (e) => {\r\n    const { checked } = e.target;\r\n    const { beacons, setBeacons } = this.props;\r\n    const index = beacons.findIndex(beacon => beacon.id === id);\r\n    const beacons2 = [...beacons];\r\n    beacons2[index] = {\r\n      ...beacons2[index],\r\n      props: {\r\n        ...beacons2[index].props,\r\n        [prop]: checked\r\n      }\r\n    };\r\n    setBeacons(beacons2);\r\n  }\r\n\r\n  onBeaconRemove = id => (e) => {\r\n    const { beacons, setBeacons } = this.props;\r\n    const beacons2 = beacons.filter(beacon => beacon.id !== id);\r\n    tracks = [];\r\n    setBeacons(beacons2);\r\n  }\r\n\r\n  onTableHover = id => (e) => {\r\n    this.setState({\r\n      hoveredBeacon: id\r\n    });\r\n  }\r\n\r\n  setMovable = id => (event) => {\r\n    event.stopPropagation();\r\n    // console.log('setMovable', id);\r\n    // console.log(state.movableId == null, (state.movableId == null ? null : id));\r\n    this.setState(state => ({\r\n      movableId: (state.movableId == null ? id : null)\r\n    }));\r\n  };\r\n\r\n  moveMovable = (event) => {\r\n    const rect = document.querySelector('svg.root-image').getBoundingClientRect();\r\n    // const rect = event.target.getBoundingClientRect();\r\n    // console.log(event.location);\r\n    const eX = event.clientX;\r\n    const eY = event.clientY;\r\n    const movable = {\r\n      x: eX - rect.left,\r\n      y: eY - rect.top\r\n    };\r\n    // const { svgWidth, svgHeight } = this.props;\r\n    this.setState((state) => {\r\n      if (state.movableId == null) return null;\r\n\r\n      const { beacons, setBeacons } = this.props;\r\n\r\n      // console.log(state.movableId);\r\n      const beacons2 = beacons.map((beacon) => {\r\n        if (beacon.id !== state.movableId) return beacon;\r\n        return {\r\n          ...beacon,\r\n          ...movable\r\n        };\r\n      });\r\n\r\n      setBeacons(beacons2);\r\n\r\n      return {\r\n        movable,\r\n        // beacons: beacons2,\r\n        // polygonData: getPolygons(beacons, svgWidth, svgHeight)\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleCheckbox = prop => () => {\r\n    this.setState(state => ({\r\n      [prop]: !state[prop]\r\n    }));\r\n  }\r\n\r\n  setModeState = mode => () => {\r\n    this.setState(({\r\n      mode\r\n    }));\r\n  }\r\n\r\n  clearMainPolygon = (mode) => {\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.setMainPolygon([]);\r\n  }\r\n\r\n  clearBeacons = (mode) => {\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.setBeacons([]);\r\n  }\r\n\r\n  clearTracks = (mode) => {\r\n    tracks = [];\r\n  }\r\n\r\n  autoIteration = (start) => {\r\n    if (start) {\r\n      setTimeout(() => this.nextIteration(), 200);\r\n    }\r\n  }\r\n\r\n  nextIteration = () => {\r\n    const {\r\n      svgWidth, svgHeight, beacons, setBeacons, mainPolygon\r\n    } = this.props;\r\n    const {\r\n      maxDelta\r\n    } = this.state;\r\n\r\n    const polygonData = getPolygons(beacons, svgWidth, svgHeight, mainPolygon);\r\n    // console.log('beacons', beacons);\r\n    // console.log('polygonData.clippedCenters', polygonData.clippedCenters);\r\n\r\n    const { clippedCenters } = polygonData;\r\n\r\n    const newBeacons = beacons.map((beacon) => {\r\n      const center = clippedCenters.find(center2 => center2.id === beacon.id);\r\n      return {\r\n        ...beacon,\r\n        x: beacon.props.positionFixed || !center || isNaN(center.x) ? beacon.x : center.x,\r\n        y: beacon.props.positionFixed || !center || isNaN(center.y) ? beacon.y : center.y,\r\n      };\r\n    });\r\n\r\n    const delta = beacons.reduce((delta2, beacon, i) => {\r\n      const { x: x1, y: y1 } = beacon;\r\n      const { x: x2, y: y2 } = newBeacons[i];\r\n\r\n      delta2 += Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\r\n      return delta2;\r\n    }, 0);\r\n    if (delta < maxDelta) {\r\n      this.setState({\r\n        enableAutoIteration: false\r\n      });\r\n    } else {\r\n      tracks.push(R.clone(newBeacons));\r\n      setBeacons(newBeacons);\r\n    }\r\n  }\r\n\r\n  onStateChange = prop => (e) => {\r\n    // console.log('prop');\r\n    this.setState({\r\n      [prop]: e.target.value\r\n    });\r\n  }\r\n\r\n  tracks2Polylines = () => {\r\n    if (tracks.length === 0) return [];\r\n    const arr = tracks[0];\r\n    return arr.map((pt, i) => tracks.map(trackArr => trackArr[i]).map(obj => [obj.x, obj.y])).map(polygon2polyline);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showBeaconMarkers, showPolygonLabels, showPolygonBoundaries,\r\n      hoveredBeacon, mode, showBeaconSignalArea, showMassCenters,\r\n      enableAutoIteration, maxDelta, signalRadius, showTracks\r\n    } = this.state;\r\n\r\n    const {\r\n      imagePositionX, imagePositionY, imageOpacity, imageScale,\r\n      svgWidth, svgHeight, onPropChange, beacons, audioService, mainPolygon, imageUrl\r\n    } = this.props;\r\n    // console.log(beacons);\r\n    let polygonData;\r\n    this.autoIteration(enableAutoIteration);\r\n    if (showPolygonLabels || showPolygonBoundaries) {\r\n      polygonData = getPolygons(beacons, svgWidth, svgHeight, mainPolygon);\r\n    }\r\n    const trackLines = this.tracks2Polylines();\r\n    // console.log('trackLines', trackLines);\r\n    return (\r\n      <div className=\"Beacons flex-row justify-content-center\">\r\n        <Map\r\n          imagePositionX={imagePositionX}\r\n          imagePositionY={imagePositionY}\r\n          imageOpacity={imageOpacity}\r\n          imageScale={imageScale}\r\n          svgWidth={svgWidth}\r\n          svgHeight={svgHeight}\r\n          imageUrl={imageUrl}\r\n          onClick={mode === 'addBeacon' ? this.addBeacon : this.addMainPolygonPoint}\r\n          onMouseMove={this.moveMovable}\r\n        >\r\n          <defs>\r\n            <radialGradient id=\"RadialGradient1\">\r\n              <stop offset=\"0%\" stopColor=\"red\" />\r\n              <stop offset=\"100%\" stopColor=\"white\" />\r\n            </radialGradient>\r\n          </defs>\r\n\r\n          <MainPolygon mainPolygon={mainPolygon} />\r\n\r\n          {\r\n            showPolygonBoundaries && polygonData.clippedPolygons\r\n              && polygonData.clippedPolygons.map((polygons, i) => polygons.map(polygon => (\r\n                <Fragment>\r\n                  <polyline\r\n                    fill={polygonData.beaconColors[i] || ColorPalette[i % ColorPalette.length].color.background || 'none'}\r\n                    stroke=\"grey\"\r\n                    strokeWidth=\"2\"\r\n                    opacity=\"0.5\"\r\n                    points={polygon2polyline(polygon)}\r\n                  />\r\n                  <polyline\r\n                    fill=\"none\"\r\n                    stroke=\"grey\"\r\n                    strokeWidth=\"2\"\r\n                    opacity=\"0.5\"\r\n                    points={polygon2polyline(polygon)}\r\n                  />\r\n                </Fragment>\r\n              )))\r\n          }\r\n          {\r\n            showTracks && trackLines.map(trackLine => (\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                opacity=\"0.5\"\r\n                points={trackLine}\r\n              />\r\n            ))\r\n          }\r\n          {\r\n            showPolygonLabels && polygonData.polygonCenters && polygonData.polygonCenters.map((center, i) => (\r\n              <Fragment>\r\n                <text x={center.x} y={center.y + 5} fontSize=\"15\" textAnchor=\"middle\" fill=\"black\">{center.id}</text>\r\n              </Fragment>\r\n            ))\r\n          }\r\n          {\r\n            beacons.map(beacon => (\r\n              <MapPoint x={beacon.x} y={beacon.y} />\r\n            ))\r\n          }\r\n          {\r\n            showMassCenters && polygonData && polygonData.clippedCenters && polygonData.clippedCenters.map((center, i) => (\r\n              <MapPoint x={center.x} y={center.y} fill=\"black\" />\r\n            ))\r\n          }\r\n          {\r\n            showBeaconSignalArea && beacons.map(beacon => (\r\n              <circle r={signalRadius} cx={beacon.x} cy={beacon.y} opacity=\"0.5\" fill=\"url(#RadialGradient1)\" />\r\n            ))\r\n          }\r\n          {\r\n            showBeaconMarkers && beacons.map(beacon => (\r\n              <MapMarker\r\n                x={beacon.x}\r\n                y={beacon.y}\r\n                id={beacon.id}\r\n                color={hoveredBeacon === beacon.id ? 'blue' : beacon.color}\r\n                onClick={this.setMovable(beacon.id)}\r\n              />\r\n            ))\r\n          }\r\n        </Map>\r\n        <div>\r\n          <SettingsForm\r\n            showBeaconMarkers={showBeaconMarkers}\r\n            showPolygonLabels={showPolygonLabels}\r\n            showPolygonBoundaries={showPolygonBoundaries}\r\n            showMassCenters={showMassCenters}\r\n            showBeaconSignalArea={showBeaconSignalArea}\r\n            showTracks={showTracks}\r\n            signalRadius={signalRadius}\r\n            enableAutoIteration={enableAutoIteration}\r\n            maxDelta={maxDelta}\r\n\r\n            toggleCheckbox={this.toggleCheckbox}\r\n            onStateChange={this.onStateChange}\r\n            nextIteration={this.nextIteration}\r\n            clearPolygon={this.clearMainPolygon}\r\n            clearBeacons={this.clearBeacons}\r\n            clearTracks={this.clearTracks}\r\n          />\r\n\r\n          <Form.Check\r\n            type=\"radio\"\r\n            id=\"addBeaconRadio\"\r\n            label=\"Add beacon mode\"\r\n            value=\"addBeacon\"\r\n            name=\"mode-radio\"\r\n            checked={mode === 'addBeacon'}\r\n            onClick={this.setModeState('addBeacon')}\r\n          />\r\n\r\n          <Form.Check\r\n            type=\"radio\"\r\n            id=\"editPolygonRadio\"\r\n            value=\"editPolygon\"\r\n            name=\"mode-radio\"\r\n            label=\"Edit main polygon mode\"\r\n            checked={mode !== 'addBeacon'}\r\n            onClick={this.setModeState('editPolygon')}\r\n          />\r\n          <br />\r\n\r\n          {mode === 'editPolygon' && (\r\n            <PolygonTable\r\n              mainPolygon={mainPolygon}\r\n              onPointChange={this.onMainPolygonPointChange}\r\n            />\r\n          )}\r\n\r\n          {mode === 'addBeacon' && (\r\n            <BeaconTable\r\n              audioService={audioService}\r\n              beacons={beacons}\r\n              onTableHover={this.onTableHover}\r\n              onBeaconChange={this.onBeaconChange}\r\n              onBeaconPropChange={this.onBeaconPropChange}\r\n              onBeaconPropCheckboxChange={this.onBeaconPropCheckboxChange}\r\n              onBeaconRemove={this.onBeaconRemove}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import { withTranslation } from 'react-i18next';\r\nimport Beacons from './Beacons.js';\r\n\r\nexport default (Beacons);\r\n","// import { withTranslation } from 'react-i18next';\r\nimport ErrorBoundry from './ErrorBoundry.jsx';\r\n\r\nexport default (ErrorBoundry);\r\n","import React, { Component } from 'react';\r\nimport './ErrorBoundry.css';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch = () => {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      localStorage.removeItem('AR_POC');\r\n      setTimeout(() => window.location.reload(), 5000);\r\n      return <div> Got error, reloading page in 5 seconds</div>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import App from './App';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}